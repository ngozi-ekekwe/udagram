version: 2.1
orbs:
  # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@4.1.0
  # different jobs are calles later in the workflows sections
  aws-cli: circleci/aws-cli@2.0.3
jobs:
  build:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/base:stable"
    steps:
      - node/install
      - checkout
      # install dependencies in both apps
      - run:
          name: Frontend install
          command: |
            npm run frontend:install
      - run:
          name: Backend install
          command: |
            npm run backend:install

      # Build both frontend and backend

      - run:
          name: Frontend Build
          command: |
            npm run frontend:build

      - run:
          name: Backend Build
          command: |
            npm run backend:build


  stage:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/base:stable"
    steps:
      - node/install
      - aws-cli/setup:
          aws-access-key-id: ACCESS_KEY
          aws-secret-access-key: SECRET_KEY
          aws-region: REGION
      - checkout
      - run:
          name: Frontend install
          command: |
            npm run frontend:install
      - run:
          name: Run Staging
          command: |
            npm run deploy:frontend

  test:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/base:stable"
    steps:
      - node/install
      - checkout
      - run:
          name: Run Mocha Tests
          command: |
            echo Hello Test

  deploy:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/base:stable"
    steps:
      - node/install
      - aws-cli/setup:
          aws-access-key-id: ACCESS_KEY
          aws-secret-access-key: SECRET_KEY
          aws-region: REGION
      - checkout
      - run:
          name: Frontend install
          command: |
            npm run frontend:install
      - run:
          name: Run Staging
          command: |
            npm run deploy:frontend

workflows:
  stage_deploy:
    jobs:
      - build
      - test:
          requires: 
            - build
      - stage:
          requires: 
            - test
      - deploy :
          filters:
              branches:
                only: main
